<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0415.1144                               -->
<workbook original-version='18.1' source-build='2022.1.1 (20221.22.0415.1144)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Top 100 Books' inline='true' name='federated.1rlukct010lz9o1c3dqxc0u4q871' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='redshift-spectrum.cd3xchnsnplk.us-east-1.redshift.amazonaws.com' name='redshift.1aal0zp0zqom8r1grmcxx041wtss'>
            <connection class='redshift' dbname='dev' odbc-connect-string-extras='' one-time-sql='' port='5439' schema='datamart' server='redshift-spectrum.cd3xchnsnplk.us-east-1.redshift.amazonaws.com' single-node='yes' sslmode='' username='yousef-socar' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='redshift.1aal0zp0zqom8r1grmcxx041wtss' name='Custom SQL Query' type='text'>SELECT datamart.books.&quot;book-title&quot;, avg(CAST(datamart.ratings.&quot;book-rating&quot; AS double precision)) AS &quot;average-rating&quot;&#13;
FROM datamart.books INNER JOIN datamart.ratings ON datamart.books.ISBN = datamart.ratings.ISBN&#13;
GROUP BY datamart.books.&quot;book-title&quot;&#13;
HAVING count(datamart.books.&quot;book-title&quot;) &gt;&gt; 100&#13;
ORDER BY &quot;average-rating&quot; DESC&#13;
LIMIT 100</_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='redshift.1aal0zp0zqom8r1grmcxx041wtss' name='Custom SQL Query' type='text'>SELECT datamart.books.&quot;book-title&quot;, avg(CAST(datamart.ratings.&quot;book-rating&quot; AS double precision)) AS &quot;average-rating&quot;&#13;
FROM datamart.books INNER JOIN datamart.ratings ON datamart.books.ISBN = datamart.ratings.ISBN&#13;
GROUP BY datamart.books.&quot;book-title&quot;&#13;
HAVING count(datamart.books.&quot;book-title&quot;) &gt;&gt; 100&#13;
ORDER BY &quot;average-rating&quot; DESC&#13;
LIMIT 100</_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>book-title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[book-title]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>book-title</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_6C2F675616B74A71920068D402E814E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>average-rating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[average-rating]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>average-rating</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_6C2F675616B74A71920068D402E814E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Top 100 Books' datatype='table' name='[__tableau_internal_object_id__].[_6C2F675616B74A71920068D402E814E4]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Arab Emirates&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Top 100 Books' id='_6C2F675616B74A71920068D402E814E4'>
            <properties context=''>
              <relation connection='redshift.1aal0zp0zqom8r1grmcxx041wtss' name='Custom SQL Query' type='text'>SELECT datamart.books.&quot;book-title&quot;, avg(CAST(datamart.ratings.&quot;book-rating&quot; AS double precision)) AS &quot;average-rating&quot;&#13;
FROM datamart.books INNER JOIN datamart.ratings ON datamart.books.ISBN = datamart.ratings.ISBN&#13;
GROUP BY datamart.books.&quot;book-title&quot;&#13;
HAVING count(datamart.books.&quot;book-title&quot;) &gt;&gt; 100&#13;
ORDER BY &quot;average-rating&quot; DESC&#13;
LIMIT 100</relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Top 10 Countries' inline='true' name='federated.1ii3mkz0mnni3v1bq1ja51kv7bbl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='redshift-spectrum.cd3xchnsnplk.us-east-1.redshift.amazonaws.com' name='redshift.0wypsd30uinitv19evvqq19lasf7'>
            <connection class='redshift' dbname='dev' odbc-connect-string-extras='' one-time-sql='' port='5439' schema='datamart' server='redshift-spectrum.cd3xchnsnplk.us-east-1.redshift.amazonaws.com' single-node='yes' sslmode='' username='yousef-socar' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='redshift.0wypsd30uinitv19evvqq19lasf7' name='Custom SQL Query' type='text'>SELECT country, count(*) AS &quot;Customer Count&quot;&#13;
FROM datamart.customers&#13;
GROUP BY country&#13;
ORDER BY &quot;Customer Count&quot; DESC&#13;
LIMIT 10</_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='redshift.0wypsd30uinitv19evvqq19lasf7' name='Custom SQL Query' type='text'>SELECT country, count(*) AS &quot;Customer Count&quot;&#13;
FROM datamart.customers&#13;
GROUP BY country&#13;
ORDER BY &quot;Customer Count&quot; DESC&#13;
LIMIT 10</_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_E40950CC5A7B43AA88B8EBC53FAF14B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[customer count]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>customer count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_E40950CC5A7B43AA88B8EBC53FAF14B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Top 10 Countries' datatype='table' name='[__tableau_internal_object_id__].[_E40950CC5A7B43AA88B8EBC53FAF14B4]' role='measure' type='quantitative' />
      <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Arab Emirates&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Top 10 Countries' id='_E40950CC5A7B43AA88B8EBC53FAF14B4'>
            <properties context=''>
              <relation connection='redshift.0wypsd30uinitv19evvqq19lasf7' name='Custom SQL Query' type='text'>SELECT country, count(*) AS &quot;Customer Count&quot;&#13;
FROM datamart.customers&#13;
GROUP BY country&#13;
ORDER BY &quot;Customer Count&quot; DESC&#13;
LIMIT 10</relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Top 10 States in USA' inline='true' name='federated.1u8z1991m2rwe11dhfqg10wpgy4p' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='redshift-spectrum.cd3xchnsnplk.us-east-1.redshift.amazonaws.com' name='redshift.1uf21gm1gsprsy16afqr20979cue'>
            <connection class='redshift' dbname='dev' odbc-connect-string-extras='' one-time-sql='' port='5439' schema='datamart' server='redshift-spectrum.cd3xchnsnplk.us-east-1.redshift.amazonaws.com' single-node='yes' sslmode='' username='yousef-socar' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='redshift.1uf21gm1gsprsy16afqr20979cue' name='Custom SQL Query' type='text'>SELECT country, state, count(*) AS &quot;Customer Count&quot;&#13;
FROM datamart.customers&#13;
WHERE country = &apos;usa&apos;&#13;
GROUP BY country, state&#13;
ORDER BY &quot;Customer Count&quot; DESC&#13;
LIMIT 10</_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='redshift.1uf21gm1gsprsy16afqr20979cue' name='Custom SQL Query' type='text'>SELECT country, state, count(*) AS &quot;Customer Count&quot;&#13;
FROM datamart.customers&#13;
WHERE country = &apos;usa&apos;&#13;
GROUP BY country, state&#13;
ORDER BY &quot;Customer Count&quot; DESC&#13;
LIMIT 10</_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7673AFA6F11D48448522D54FF3CCE1EF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7673AFA6F11D48448522D54FF3CCE1EF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[customer count]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>customer count</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7673AFA6F11D48448522D54FF3CCE1EF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Top 10 States in USA' datatype='table' name='[__tableau_internal_object_id__].[_7673AFA6F11D48448522D54FF3CCE1EF]' role='measure' type='quantitative' />
      <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <drill-paths>
        <drill-path name='country, state'>
          <field>[country]</field>
          <field>[state]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Arab Emirates&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Top 10 States in USA' id='_7673AFA6F11D48448522D54FF3CCE1EF'>
            <properties context=''>
              <relation connection='redshift.1uf21gm1gsprsy16afqr20979cue' name='Custom SQL Query' type='text'>SELECT country, state, count(*) AS &quot;Customer Count&quot;&#13;
FROM datamart.customers&#13;
WHERE country = &apos;usa&apos;&#13;
GROUP BY country, state&#13;
ORDER BY &quot;Customer Count&quot; DESC&#13;
LIMIT 10</relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Custom SQL Query (datamart)' inline='true' name='federated.1amcn4b00ur88o18xqvda1k8rcyo' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='redshift-spectrum.cd3xchnsnplk.us-east-1.redshift.amazonaws.com' name='redshift.0sv0qnn1ilq0201ebm99i12x9fya'>
            <connection class='redshift' dbname='dev' odbc-connect-string-extras='' one-time-sql='' port='5439' schema='datamart' server='redshift-spectrum.cd3xchnsnplk.us-east-1.redshift.amazonaws.com' single-node='yes' sslmode='' username='yousef-socar' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='redshift.0sv0qnn1ilq0201ebm99i12x9fya' name='Custom SQL Query' type='text'>SELECT datamart.books.&quot;book-author&quot;, avg(CAST(datamart.ratings.&quot;book-rating&quot; AS double precision)) AS &quot;Average Rating&quot;&#13;
FROM datamart.books INNER JOIN datamart.ratings ON datamart.books.ISBN = datamart.ratings.ISBN&#13;
GROUP BY datamart.books.&quot;book-author&quot;&#13;
HAVING count(datamart.books.&quot;book-author&quot;) &gt;&gt; 100&#13;
ORDER BY &quot;Average Rating&quot; DESC&#13;
LIMIT 10</_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='redshift.0sv0qnn1ilq0201ebm99i12x9fya' name='Custom SQL Query' type='text'>SELECT datamart.books.&quot;book-author&quot;, avg(CAST(datamart.ratings.&quot;book-rating&quot; AS double precision)) AS &quot;Average Rating&quot;&#13;
FROM datamart.books INNER JOIN datamart.ratings ON datamart.books.ISBN = datamart.ratings.ISBN&#13;
GROUP BY datamart.books.&quot;book-author&quot;&#13;
HAVING count(datamart.books.&quot;book-author&quot;) &gt;&gt; 100&#13;
ORDER BY &quot;Average Rating&quot; DESC&#13;
LIMIT 10</_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>book-author</remote-name>
            <remote-type>130</remote-type>
            <local-name>[book-author]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>book-author</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_ED6486FE211D44E9AA2E8DE7F13D8D91]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>average rating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[average rating]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>average rating</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_ED6486FE211D44E9AA2E8DE7F13D8D91]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Custom SQL Query' datatype='table' name='[__tableau_internal_object_id__].[_ED6486FE211D44E9AA2E8DE7F13D8D91]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Arab Emirates&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Custom SQL Query' id='_ED6486FE211D44E9AA2E8DE7F13D8D91'>
            <properties context=''>
              <relation connection='redshift.0sv0qnn1ilq0201ebm99i12x9fya' name='Custom SQL Query' type='text'>SELECT datamart.books.&quot;book-author&quot;, avg(CAST(datamart.ratings.&quot;book-rating&quot; AS double precision)) AS &quot;Average Rating&quot;&#13;
FROM datamart.books INNER JOIN datamart.ratings ON datamart.books.ISBN = datamart.ratings.ISBN&#13;
GROUP BY datamart.books.&quot;book-author&quot;&#13;
HAVING count(datamart.books.&quot;book-author&quot;) &gt;&gt; 100&#13;
ORDER BY &quot;Average Rating&quot; DESC&#13;
LIMIT 10</relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Top 10 Book Authors'>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query (datamart)' name='federated.1amcn4b00ur88o18xqvda1k8rcyo' />
          </datasources>
          <datasource-dependencies datasource='federated.1amcn4b00ur88o18xqvda1k8rcyo'>
            <column datatype='real' name='[average rating]' role='measure' type='quantitative' />
            <column datatype='string' name='[book-author]' role='dimension' type='nominal' />
            <column-instance column='[book-author]' derivation='None' name='[none:book-author:nk]' pivot='key' type='nominal' />
            <column-instance column='[average rating]' derivation='Sum' name='[sum:average rating:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1amcn4b00ur88o18xqvda1k8rcyo].[none:book-author:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1amcn4b00ur88o18xqvda1k8rcyo].[sum:average rating:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1amcn4b00ur88o18xqvda1k8rcyo].[none:book-author:nk]' value='106' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1amcn4b00ur88o18xqvda1k8rcyo].[sum:average rating:qk]' />
              <text column='[federated.1amcn4b00ur88o18xqvda1k8rcyo].[sum:average rating:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1amcn4b00ur88o18xqvda1k8rcyo].[sum:average rating:qk]</rows>
        <cols>[federated.1amcn4b00ur88o18xqvda1k8rcyo].[none:book-author:nk]</cols>
      </table>
      <simple-id uuid='{1BE8D4AB-0E5D-4BE3-8707-3038A5C2EBBE}' />
    </worksheet>
    <worksheet name='Top 10 Countries'>
      <table>
        <view>
          <datasources>
            <datasource caption='Top 10 Countries' name='federated.1ii3mkz0mnni3v1bq1ja51kv7bbl' />
          </datasources>
          <datasource-dependencies datasource='federated.1ii3mkz0mnni3v1bq1ja51kv7bbl'>
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[customer count]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[customer count]' derivation='Sum' name='[sum:customer count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ii3mkz0mnni3v1bq1ja51kv7bbl].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ii3mkz0mnni3v1bq1ja51kv7bbl].[sum:customer count:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1ii3mkz0mnni3v1bq1ja51kv7bbl].[none:country:nk]' value='100' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ii3mkz0mnni3v1bq1ja51kv7bbl].[sum:customer count:qk]' />
              <text column='[federated.1ii3mkz0mnni3v1bq1ja51kv7bbl].[sum:customer count:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ii3mkz0mnni3v1bq1ja51kv7bbl].[sum:customer count:qk]</rows>
        <cols>[federated.1ii3mkz0mnni3v1bq1ja51kv7bbl].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{5BC9BDCA-896B-4E48-851A-C21AA0F5661D}' />
    </worksheet>
    <worksheet name='Top 10 States in USA'>
      <table>
        <view>
          <datasources>
            <datasource caption='Top 10 States in USA' name='federated.1u8z1991m2rwe11dhfqg10wpgy4p' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1u8z1991m2rwe11dhfqg10wpgy4p'>
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[customer count]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[customer count]' derivation='Sum' name='[sum:customer count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1u8z1991m2rwe11dhfqg10wpgy4p].[sum:customer count:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1u8z1991m2rwe11dhfqg10wpgy4p].[sum:customer count:qk]' />
              <text column='[federated.1u8z1991m2rwe11dhfqg10wpgy4p].[none:state:nk]' />
              <text column='[federated.1u8z1991m2rwe11dhfqg10wpgy4p].[sum:customer count:qk]' />
              <lod column='[federated.1u8z1991m2rwe11dhfqg10wpgy4p].[none:state:nk]' />
              <lod column='[federated.1u8z1991m2rwe11dhfqg10wpgy4p].[none:country:nk]' />
              <geometry column='[federated.1u8z1991m2rwe11dhfqg10wpgy4p].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1u8z1991m2rwe11dhfqg10wpgy4p].[Latitude (generated)]</rows>
        <cols>[federated.1u8z1991m2rwe11dhfqg10wpgy4p].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A490D232-F908-40B8-ABEF-6C886E3C0D63}' />
    </worksheet>
    <worksheet name='Top 100 Books'>
      <table>
        <view>
          <datasources>
            <datasource caption='Top 100 Books' name='federated.1rlukct010lz9o1c3dqxc0u4q871' />
          </datasources>
          <datasource-dependencies datasource='federated.1rlukct010lz9o1c3dqxc0u4q871'>
            <column datatype='real' name='[average-rating]' role='measure' type='quantitative' />
            <column datatype='string' name='[book-title]' role='dimension' type='nominal' />
            <column-instance column='[book-title]' derivation='None' name='[none:book-title:nk]' pivot='key' type='nominal' />
            <column-instance column='[average-rating]' derivation='Sum' name='[sum:average-rating:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1rlukct010lz9o1c3dqxc0u4q871].[none:book-title:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1rlukct010lz9o1c3dqxc0u4q871].[sum:average-rating:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1rlukct010lz9o1c3dqxc0u4q871].[none:book-title:nk]' value='384' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1rlukct010lz9o1c3dqxc0u4q871].[sum:average-rating:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rlukct010lz9o1c3dqxc0u4q871].[sum:average-rating:qk]' />
              <text column='[federated.1rlukct010lz9o1c3dqxc0u4q871].[sum:average-rating:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rlukct010lz9o1c3dqxc0u4q871].[none:book-title:nk]</rows>
        <cols>[federated.1rlukct010lz9o1c3dqxc0u4q871].[sum:average-rating:qk]</cols>
      </table>
      <simple-id uuid='{1DC5AF6E-E9DC-4D69-9A27-35E160D0F754}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Top 100 Books'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1rlukct010lz9o1c3dqxc0u4q871].[sum:average-rating:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rlukct010lz9o1c3dqxc0u4q871].[none:book-title:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A0938D88-579C-45B2-84D0-DBA01E4AC762}' />
    </window>
    <window class='worksheet' name='Top 10 Countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ii3mkz0mnni3v1bq1ja51kv7bbl].[sum:customer count:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ii3mkz0mnni3v1bq1ja51kv7bbl].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1556D26C-5142-4AE7-9E35-2009A49597A4}' />
    </window>
    <window class='worksheet' name='Top 10 States in USA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1u8z1991m2rwe11dhfqg10wpgy4p].[sum:customer count:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1u8z1991m2rwe11dhfqg10wpgy4p].[none:state:nk]</field>
            <field>[federated.1u8z1991m2rwe11dhfqg10wpgy4p].[sum:customer count:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BD8D9B97-A29B-4100-A423-703FC1F4C1AE}' />
    </window>
    <window class='worksheet' maximized='true' name='Top 10 Book Authors'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1amcn4b00ur88o18xqvda1k8rcyo].[sum:average rating:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1amcn4b00ur88o18xqvda1k8rcyo].[none:book-author:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F6FB11CB-7B73-46A2-A46D-8BB58414CC28}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Top 10 Book Authors' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 Countries' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top 10 States in USA' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 100 Books' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
